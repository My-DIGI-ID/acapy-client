/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.ssi.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ibm.ssi.acapy_client.model.V20Pres;
import com.ibm.ssi.acapy_client.model.V20PresExRecordByFormat;
import com.ibm.ssi.acapy_client.model.V20PresProposal;
import com.ibm.ssi.acapy_client.model.V20PresRequest;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ibm.ssi.acapy_client.invoker.JSON;


/**
 * V20PresExRecord
 */
@JsonPropertyOrder({
  V20PresExRecord.JSON_PROPERTY_AUTO_PRESENT,
  V20PresExRecord.JSON_PROPERTY_BY_FORMAT,
  V20PresExRecord.JSON_PROPERTY_CONNECTION_ID,
  V20PresExRecord.JSON_PROPERTY_CREATED_AT,
  V20PresExRecord.JSON_PROPERTY_ERROR_MSG,
  V20PresExRecord.JSON_PROPERTY_INITIATOR,
  V20PresExRecord.JSON_PROPERTY_PRES,
  V20PresExRecord.JSON_PROPERTY_PRES_EX_ID,
  V20PresExRecord.JSON_PROPERTY_PRES_PROPOSAL,
  V20PresExRecord.JSON_PROPERTY_PRES_REQUEST,
  V20PresExRecord.JSON_PROPERTY_ROLE,
  V20PresExRecord.JSON_PROPERTY_STATE,
  V20PresExRecord.JSON_PROPERTY_THREAD_ID,
  V20PresExRecord.JSON_PROPERTY_TRACE,
  V20PresExRecord.JSON_PROPERTY_UPDATED_AT,
  V20PresExRecord.JSON_PROPERTY_VERIFIED
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-11T17:04:23.656276+02:00[Europe/Berlin]")
public class V20PresExRecord {
  public static final String JSON_PROPERTY_AUTO_PRESENT = "auto_present";
  private Boolean autoPresent;

  public static final String JSON_PROPERTY_BY_FORMAT = "by_format";
  private V20PresExRecordByFormat byFormat;

  public static final String JSON_PROPERTY_CONNECTION_ID = "connection_id";
  private String connectionId;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private String createdAt;

  public static final String JSON_PROPERTY_ERROR_MSG = "error_msg";
  private String errorMsg;

  /**
   * Present-proof exchange initiator: self or external
   */
  public enum InitiatorEnum {
    SELF("self"),
    
    EXTERNAL("external");

    private String value;

    InitiatorEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static InitiatorEnum fromValue(String value) {
      for (InitiatorEnum b : InitiatorEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_INITIATOR = "initiator";
  private InitiatorEnum initiator;

  public static final String JSON_PROPERTY_PRES = "pres";
  private V20Pres pres;

  public static final String JSON_PROPERTY_PRES_EX_ID = "pres_ex_id";
  private String presExId;

  public static final String JSON_PROPERTY_PRES_PROPOSAL = "pres_proposal";
  private V20PresProposal presProposal;

  public static final String JSON_PROPERTY_PRES_REQUEST = "pres_request";
  private V20PresRequest presRequest;

  /**
   * Present-proof exchange role: prover or verifier
   */
  public enum RoleEnum {
    PROVER("prover"),
    
    VERIFIER("verifier");

    private String value;

    RoleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RoleEnum fromValue(String value) {
      for (RoleEnum b : RoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_ROLE = "role";
  private RoleEnum role;

  /**
   * Present-proof exchange state
   */
  public enum StateEnum {
    PROPOSAL_SENT("proposal-sent"),
    
    PROPOSAL_RECEIVED("proposal-received"),
    
    REQUEST_SENT("request-sent"),
    
    REQUEST_RECEIVED("request-received"),
    
    PRESENTATION_SENT("presentation-sent"),
    
    PRESENTATION_RECEIVED("presentation-received"),
    
    DONE("done"),
    
    ABANDONED("abandoned");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public static final String JSON_PROPERTY_THREAD_ID = "thread_id";
  private String threadId;

  public static final String JSON_PROPERTY_TRACE = "trace";
  private Boolean trace;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private String updatedAt;

  /**
   * Whether presentation is verified: &#39;true&#39; or &#39;false&#39;
   */
  public enum VerifiedEnum {
    TRUE("true"),
    
    FALSE("false");

    private String value;

    VerifiedEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static VerifiedEnum fromValue(String value) {
      for (VerifiedEnum b : VerifiedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_VERIFIED = "verified";
  private VerifiedEnum verified;


  public V20PresExRecord autoPresent(Boolean autoPresent) {
    this.autoPresent = autoPresent;
    return this;
  }

   /**
   * Prover choice to auto-present proof as verifier requests
   * @return autoPresent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Prover choice to auto-present proof as verifier requests")
  @JsonProperty(JSON_PROPERTY_AUTO_PRESENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAutoPresent() {
    return autoPresent;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_PRESENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoPresent(Boolean autoPresent) {
    this.autoPresent = autoPresent;
  }


  public V20PresExRecord byFormat(V20PresExRecordByFormat byFormat) {
    this.byFormat = byFormat;
    return this;
  }

   /**
   * Attachment content by format for proposal, request, and presentation
   * @return byFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Attachment content by format for proposal, request, and presentation")
  @JsonProperty(JSON_PROPERTY_BY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V20PresExRecordByFormat getByFormat() {
    return byFormat;
  }


  @JsonProperty(JSON_PROPERTY_BY_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setByFormat(V20PresExRecordByFormat byFormat) {
    this.byFormat = byFormat;
  }


  public V20PresExRecord connectionId(String connectionId) {
    this.connectionId = connectionId;
    return this;
  }

   /**
   * Connection identifier
   * @return connectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3fa85f64-5717-4562-b3fc-2c963f66afa6", value = "Connection identifier")
  @JsonProperty(JSON_PROPERTY_CONNECTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getConnectionId() {
    return connectionId;
  }


  @JsonProperty(JSON_PROPERTY_CONNECTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConnectionId(String connectionId) {
    this.connectionId = connectionId;
  }


  public V20PresExRecord createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Time of record creation
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-08-25 08:37:04Z", value = "Time of record creation")
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public V20PresExRecord errorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
    return this;
  }

   /**
   * Error message
   * @return errorMsg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Invalid structure", value = "Error message")
  @JsonProperty(JSON_PROPERTY_ERROR_MSG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getErrorMsg() {
    return errorMsg;
  }


  @JsonProperty(JSON_PROPERTY_ERROR_MSG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setErrorMsg(String errorMsg) {
    this.errorMsg = errorMsg;
  }


  public V20PresExRecord initiator(InitiatorEnum initiator) {
    this.initiator = initiator;
    return this;
  }

   /**
   * Present-proof exchange initiator: self or external
   * @return initiator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "self", value = "Present-proof exchange initiator: self or external")
  @JsonProperty(JSON_PROPERTY_INITIATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InitiatorEnum getInitiator() {
    return initiator;
  }


  @JsonProperty(JSON_PROPERTY_INITIATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInitiator(InitiatorEnum initiator) {
    this.initiator = initiator;
  }


  public V20PresExRecord pres(V20Pres pres) {
    this.pres = pres;
    return this;
  }

   /**
   * Presentation message
   * @return pres
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presentation message")
  @JsonProperty(JSON_PROPERTY_PRES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V20Pres getPres() {
    return pres;
  }


  @JsonProperty(JSON_PROPERTY_PRES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPres(V20Pres pres) {
    this.pres = pres;
  }


  public V20PresExRecord presExId(String presExId) {
    this.presExId = presExId;
    return this;
  }

   /**
   * Presentation exchange identifier
   * @return presExId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3fa85f64-5717-4562-b3fc-2c963f66afa6", value = "Presentation exchange identifier")
  @JsonProperty(JSON_PROPERTY_PRES_EX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPresExId() {
    return presExId;
  }


  @JsonProperty(JSON_PROPERTY_PRES_EX_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPresExId(String presExId) {
    this.presExId = presExId;
  }


  public V20PresExRecord presProposal(V20PresProposal presProposal) {
    this.presProposal = presProposal;
    return this;
  }

   /**
   * Presentation proposal message
   * @return presProposal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presentation proposal message")
  @JsonProperty(JSON_PROPERTY_PRES_PROPOSAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V20PresProposal getPresProposal() {
    return presProposal;
  }


  @JsonProperty(JSON_PROPERTY_PRES_PROPOSAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPresProposal(V20PresProposal presProposal) {
    this.presProposal = presProposal;
  }


  public V20PresExRecord presRequest(V20PresRequest presRequest) {
    this.presRequest = presRequest;
    return this;
  }

   /**
   * Presentation request message
   * @return presRequest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Presentation request message")
  @JsonProperty(JSON_PROPERTY_PRES_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V20PresRequest getPresRequest() {
    return presRequest;
  }


  @JsonProperty(JSON_PROPERTY_PRES_REQUEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPresRequest(V20PresRequest presRequest) {
    this.presRequest = presRequest;
  }


  public V20PresExRecord role(RoleEnum role) {
    this.role = role;
    return this;
  }

   /**
   * Present-proof exchange role: prover or verifier
   * @return role
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "prover", value = "Present-proof exchange role: prover or verifier")
  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoleEnum getRole() {
    return role;
  }


  @JsonProperty(JSON_PROPERTY_ROLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRole(RoleEnum role) {
    this.role = role;
  }


  public V20PresExRecord state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Present-proof exchange state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Present-proof exchange state")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(StateEnum state) {
    this.state = state;
  }


  public V20PresExRecord threadId(String threadId) {
    this.threadId = threadId;
    return this;
  }

   /**
   * Thread identifier
   * @return threadId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3fa85f64-5717-4562-b3fc-2c963f66afa6", value = "Thread identifier")
  @JsonProperty(JSON_PROPERTY_THREAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getThreadId() {
    return threadId;
  }


  @JsonProperty(JSON_PROPERTY_THREAD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThreadId(String threadId) {
    this.threadId = threadId;
  }


  public V20PresExRecord trace(Boolean trace) {
    this.trace = trace;
    return this;
  }

   /**
   * Record trace information, based on agent configuration
   * @return trace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Record trace information, based on agent configuration")
  @JsonProperty(JSON_PROPERTY_TRACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getTrace() {
    return trace;
  }


  @JsonProperty(JSON_PROPERTY_TRACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrace(Boolean trace) {
    this.trace = trace;
  }


  public V20PresExRecord updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Time of last record update
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-08-25 08:37:04Z", value = "Time of last record update")
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public V20PresExRecord verified(VerifiedEnum verified) {
    this.verified = verified;
    return this;
  }

   /**
   * Whether presentation is verified: &#39;true&#39; or &#39;false&#39;
   * @return verified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Whether presentation is verified: 'true' or 'false'")
  @JsonProperty(JSON_PROPERTY_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public VerifiedEnum getVerified() {
    return verified;
  }


  @JsonProperty(JSON_PROPERTY_VERIFIED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerified(VerifiedEnum verified) {
    this.verified = verified;
  }


  /**
   * Return true if this V20PresExRecord object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V20PresExRecord v20PresExRecord = (V20PresExRecord) o;
    return Objects.equals(this.autoPresent, v20PresExRecord.autoPresent) &&
        Objects.equals(this.byFormat, v20PresExRecord.byFormat) &&
        Objects.equals(this.connectionId, v20PresExRecord.connectionId) &&
        Objects.equals(this.createdAt, v20PresExRecord.createdAt) &&
        Objects.equals(this.errorMsg, v20PresExRecord.errorMsg) &&
        Objects.equals(this.initiator, v20PresExRecord.initiator) &&
        Objects.equals(this.pres, v20PresExRecord.pres) &&
        Objects.equals(this.presExId, v20PresExRecord.presExId) &&
        Objects.equals(this.presProposal, v20PresExRecord.presProposal) &&
        Objects.equals(this.presRequest, v20PresExRecord.presRequest) &&
        Objects.equals(this.role, v20PresExRecord.role) &&
        Objects.equals(this.state, v20PresExRecord.state) &&
        Objects.equals(this.threadId, v20PresExRecord.threadId) &&
        Objects.equals(this.trace, v20PresExRecord.trace) &&
        Objects.equals(this.updatedAt, v20PresExRecord.updatedAt) &&
        Objects.equals(this.verified, v20PresExRecord.verified);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoPresent, byFormat, connectionId, createdAt, errorMsg, initiator, pres, presExId, presProposal, presRequest, role, state, threadId, trace, updatedAt, verified);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V20PresExRecord {\n");
    sb.append("    autoPresent: ").append(toIndentedString(autoPresent)).append("\n");
    sb.append("    byFormat: ").append(toIndentedString(byFormat)).append("\n");
    sb.append("    connectionId: ").append(toIndentedString(connectionId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    errorMsg: ").append(toIndentedString(errorMsg)).append("\n");
    sb.append("    initiator: ").append(toIndentedString(initiator)).append("\n");
    sb.append("    pres: ").append(toIndentedString(pres)).append("\n");
    sb.append("    presExId: ").append(toIndentedString(presExId)).append("\n");
    sb.append("    presProposal: ").append(toIndentedString(presProposal)).append("\n");
    sb.append("    presRequest: ").append(toIndentedString(presRequest)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    threadId: ").append(toIndentedString(threadId)).append("\n");
    sb.append("    trace: ").append(toIndentedString(trace)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    verified: ").append(toIndentedString(verified)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

