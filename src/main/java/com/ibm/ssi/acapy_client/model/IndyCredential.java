/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.ssi.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ibm.ssi.acapy_client.model.IndyAttrValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ibm.ssi.acapy_client.invoker.JSON;


/**
 * IndyCredential
 */
@JsonPropertyOrder({
  IndyCredential.JSON_PROPERTY_CRED_DEF_ID,
  IndyCredential.JSON_PROPERTY_REV_REG,
  IndyCredential.JSON_PROPERTY_REV_REG_ID,
  IndyCredential.JSON_PROPERTY_SCHEMA_ID,
  IndyCredential.JSON_PROPERTY_SIGNATURE,
  IndyCredential.JSON_PROPERTY_SIGNATURE_CORRECTNESS_PROOF,
  IndyCredential.JSON_PROPERTY_VALUES,
  IndyCredential.JSON_PROPERTY_WITNESS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-28T08:24:27.640452+02:00[Europe/Berlin]")
public class IndyCredential {
  public static final String JSON_PROPERTY_CRED_DEF_ID = "cred_def_id";
  private String credDefId;

  public static final String JSON_PROPERTY_REV_REG = "rev_reg";
  private JsonNullable<Object> revReg = JsonNullable.<Object>undefined();

  public static final String JSON_PROPERTY_REV_REG_ID = "rev_reg_id";
  private JsonNullable<String> revRegId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_SCHEMA_ID = "schema_id";
  private String schemaId;

  public static final String JSON_PROPERTY_SIGNATURE = "signature";
  private Object signature;

  public static final String JSON_PROPERTY_SIGNATURE_CORRECTNESS_PROOF = "signature_correctness_proof";
  private Object signatureCorrectnessProof;

  public static final String JSON_PROPERTY_VALUES = "values";
  private Map<String, IndyAttrValue> values = new HashMap<>();

  public static final String JSON_PROPERTY_WITNESS = "witness";
  private JsonNullable<Object> witness = JsonNullable.<Object>undefined();


  public IndyCredential credDefId(String credDefId) {
    this.credDefId = credDefId;
    return this;
  }

   /**
   * Credential definition identifier
   * @return credDefId
  **/
  @ApiModelProperty(example = "WgWxqztrNooG92RXvxSTWv:3:CL:20:tag", required = true, value = "Credential definition identifier")
  @JsonProperty(JSON_PROPERTY_CRED_DEF_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCredDefId() {
    return credDefId;
  }


  @JsonProperty(JSON_PROPERTY_CRED_DEF_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCredDefId(String credDefId) {
    this.credDefId = credDefId;
  }


  public IndyCredential revReg(Object revReg) {
    this.revReg = JsonNullable.<Object>of(revReg);
    return this;
  }

   /**
   * Revocation registry state
   * @return revReg
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Revocation registry state")
  @JsonIgnore

  public Object getRevReg() {
        return revReg.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REV_REG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getRevReg_JsonNullable() {
    return revReg;
  }
  
  @JsonProperty(JSON_PROPERTY_REV_REG)
  public void setRevReg_JsonNullable(JsonNullable<Object> revReg) {
    this.revReg = revReg;
  }

  public void setRevReg(Object revReg) {
    this.revReg = JsonNullable.<Object>of(revReg);
  }


  public IndyCredential revRegId(String revRegId) {
    this.revRegId = JsonNullable.<String>of(revRegId);
    return this;
  }

   /**
   * Revocation registry identifier
   * @return revRegId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0", value = "Revocation registry identifier")
  @JsonIgnore

  public String getRevRegId() {
        return revRegId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_REV_REG_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getRevRegId_JsonNullable() {
    return revRegId;
  }
  
  @JsonProperty(JSON_PROPERTY_REV_REG_ID)
  public void setRevRegId_JsonNullable(JsonNullable<String> revRegId) {
    this.revRegId = revRegId;
  }

  public void setRevRegId(String revRegId) {
    this.revRegId = JsonNullable.<String>of(revRegId);
  }


  public IndyCredential schemaId(String schemaId) {
    this.schemaId = schemaId;
    return this;
  }

   /**
   * Schema identifier
   * @return schemaId
  **/
  @ApiModelProperty(example = "WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0", required = true, value = "Schema identifier")
  @JsonProperty(JSON_PROPERTY_SCHEMA_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSchemaId() {
    return schemaId;
  }


  @JsonProperty(JSON_PROPERTY_SCHEMA_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSchemaId(String schemaId) {
    this.schemaId = schemaId;
  }


  public IndyCredential signature(Object signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Credential signature
   * @return signature
  **/
  @ApiModelProperty(required = true, value = "Credential signature")
  @JsonProperty(JSON_PROPERTY_SIGNATURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getSignature() {
    return signature;
  }


  @JsonProperty(JSON_PROPERTY_SIGNATURE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSignature(Object signature) {
    this.signature = signature;
  }


  public IndyCredential signatureCorrectnessProof(Object signatureCorrectnessProof) {
    this.signatureCorrectnessProof = signatureCorrectnessProof;
    return this;
  }

   /**
   * Credential signature correctness proof
   * @return signatureCorrectnessProof
  **/
  @ApiModelProperty(required = true, value = "Credential signature correctness proof")
  @JsonProperty(JSON_PROPERTY_SIGNATURE_CORRECTNESS_PROOF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getSignatureCorrectnessProof() {
    return signatureCorrectnessProof;
  }


  @JsonProperty(JSON_PROPERTY_SIGNATURE_CORRECTNESS_PROOF)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSignatureCorrectnessProof(Object signatureCorrectnessProof) {
    this.signatureCorrectnessProof = signatureCorrectnessProof;
  }


  public IndyCredential values(Map<String, IndyAttrValue> values) {
    this.values = values;
    return this;
  }

  public IndyCredential putValuesItem(String key, IndyAttrValue valuesItem) {
    this.values.put(key, valuesItem);
    return this;
  }

   /**
   * Credential attributes
   * @return values
  **/
  @ApiModelProperty(required = true, value = "Credential attributes")
  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, IndyAttrValue> getValues() {
    return values;
  }


  @JsonProperty(JSON_PROPERTY_VALUES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValues(Map<String, IndyAttrValue> values) {
    this.values = values;
  }


  public IndyCredential witness(Object witness) {
    this.witness = JsonNullable.<Object>of(witness);
    return this;
  }

   /**
   * Witness for revocation proof
   * @return witness
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Witness for revocation proof")
  @JsonIgnore

  public Object getWitness() {
        return witness.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WITNESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getWitness_JsonNullable() {
    return witness;
  }
  
  @JsonProperty(JSON_PROPERTY_WITNESS)
  public void setWitness_JsonNullable(JsonNullable<Object> witness) {
    this.witness = witness;
  }

  public void setWitness(Object witness) {
    this.witness = JsonNullable.<Object>of(witness);
  }


  /**
   * Return true if this IndyCredential object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndyCredential indyCredential = (IndyCredential) o;
    return Objects.equals(this.credDefId, indyCredential.credDefId) &&
        Objects.equals(this.revReg, indyCredential.revReg) &&
        Objects.equals(this.revRegId, indyCredential.revRegId) &&
        Objects.equals(this.schemaId, indyCredential.schemaId) &&
        Objects.equals(this.signature, indyCredential.signature) &&
        Objects.equals(this.signatureCorrectnessProof, indyCredential.signatureCorrectnessProof) &&
        Objects.equals(this.values, indyCredential.values) &&
        Objects.equals(this.witness, indyCredential.witness);
  }

  @Override
  public int hashCode() {
    return Objects.hash(credDefId, revReg, revRegId, schemaId, signature, signatureCorrectnessProof, values, witness);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndyCredential {\n");
    sb.append("    credDefId: ").append(toIndentedString(credDefId)).append("\n");
    sb.append("    revReg: ").append(toIndentedString(revReg)).append("\n");
    sb.append("    revRegId: ").append(toIndentedString(revRegId)).append("\n");
    sb.append("    schemaId: ").append(toIndentedString(schemaId)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    signatureCorrectnessProof: ").append(toIndentedString(signatureCorrectnessProof)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    witness: ").append(toIndentedString(witness)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

