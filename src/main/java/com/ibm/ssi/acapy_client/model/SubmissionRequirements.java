/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.ssi.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ibm.ssi.acapy_client.invoker.JSON;


/**
 * SubmissionRequirements
 */
@JsonPropertyOrder({
  SubmissionRequirements.JSON_PROPERTY_COUNT,
  SubmissionRequirements.JSON_PROPERTY_FROM,
  SubmissionRequirements.JSON_PROPERTY_FROM_NESTED,
  SubmissionRequirements.JSON_PROPERTY_MAX,
  SubmissionRequirements.JSON_PROPERTY_MIN,
  SubmissionRequirements.JSON_PROPERTY_NAME,
  SubmissionRequirements.JSON_PROPERTY_PURPOSE,
  SubmissionRequirements.JSON_PROPERTY_RULE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-28T08:24:27.640452+02:00[Europe/Berlin]")
public class SubmissionRequirements {
  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count;

  public static final String JSON_PROPERTY_FROM = "from";
  private String from;

  public static final String JSON_PROPERTY_FROM_NESTED = "from_nested";
  private List<SubmissionRequirements> fromNested = null;

  public static final String JSON_PROPERTY_MAX = "max";
  private Integer max;

  public static final String JSON_PROPERTY_MIN = "min";
  private Integer min;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PURPOSE = "purpose";
  private String purpose;

  /**
   * Selection
   */
  public enum RuleEnum {
    ALL("all"),
    
    PICK("pick");

    private String value;

    RuleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RuleEnum fromValue(String value) {
      for (RuleEnum b : RuleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RULE = "rule";
  private RuleEnum rule;


  public SubmissionRequirements count(Integer count) {
    this.count = count;
    return this;
  }

   /**
   * Count Value
   * @return count
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1234", value = "Count Value")
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCount(Integer count) {
    this.count = count;
  }


  public SubmissionRequirements from(String from) {
    this.from = from;
    return this;
  }

   /**
   * From
   * @return from
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "From")
  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFrom() {
    return from;
  }


  @JsonProperty(JSON_PROPERTY_FROM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrom(String from) {
    this.from = from;
  }


  public SubmissionRequirements fromNested(List<SubmissionRequirements> fromNested) {
    this.fromNested = fromNested;
    return this;
  }

  public SubmissionRequirements addFromNestedItem(SubmissionRequirements fromNestedItem) {
    if (this.fromNested == null) {
      this.fromNested = new ArrayList<>();
    }
    this.fromNested.add(fromNestedItem);
    return this;
  }

   /**
   * Get fromNested
   * @return fromNested
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FROM_NESTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SubmissionRequirements> getFromNested() {
    return fromNested;
  }


  @JsonProperty(JSON_PROPERTY_FROM_NESTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromNested(List<SubmissionRequirements> fromNested) {
    this.fromNested = fromNested;
  }


  public SubmissionRequirements max(Integer max) {
    this.max = max;
    return this;
  }

   /**
   * Max Value
   * @return max
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1234", value = "Max Value")
  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMax() {
    return max;
  }


  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMax(Integer max) {
    this.max = max;
  }


  public SubmissionRequirements min(Integer min) {
    this.min = min;
    return this;
  }

   /**
   * Min Value
   * @return min
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1234", value = "Min Value")
  @JsonProperty(JSON_PROPERTY_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMin() {
    return min;
  }


  @JsonProperty(JSON_PROPERTY_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMin(Integer min) {
    this.min = min;
  }


  public SubmissionRequirements name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public SubmissionRequirements purpose(String purpose) {
    this.purpose = purpose;
    return this;
  }

   /**
   * Purpose
   * @return purpose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Purpose")
  @JsonProperty(JSON_PROPERTY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPurpose() {
    return purpose;
  }


  @JsonProperty(JSON_PROPERTY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }


  public SubmissionRequirements rule(RuleEnum rule) {
    this.rule = rule;
    return this;
  }

   /**
   * Selection
   * @return rule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Selection")
  @JsonProperty(JSON_PROPERTY_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RuleEnum getRule() {
    return rule;
  }


  @JsonProperty(JSON_PROPERTY_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRule(RuleEnum rule) {
    this.rule = rule;
  }


  /**
   * Return true if this SubmissionRequirements object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubmissionRequirements submissionRequirements = (SubmissionRequirements) o;
    return Objects.equals(this.count, submissionRequirements.count) &&
        Objects.equals(this.from, submissionRequirements.from) &&
        Objects.equals(this.fromNested, submissionRequirements.fromNested) &&
        Objects.equals(this.max, submissionRequirements.max) &&
        Objects.equals(this.min, submissionRequirements.min) &&
        Objects.equals(this.name, submissionRequirements.name) &&
        Objects.equals(this.purpose, submissionRequirements.purpose) &&
        Objects.equals(this.rule, submissionRequirements.rule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(count, from, fromNested, max, min, name, purpose, rule);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubmissionRequirements {\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    fromNested: ").append(toIndentedString(fromNested)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    rule: ").append(toIndentedString(rule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

