/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.ssi.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ibm.ssi.acapy_client.model.AttachDecoratorData;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ibm.ssi.acapy_client.invoker.JSON;


/**
 * AttachDecorator
 */
@JsonPropertyOrder({
  AttachDecorator.JSON_PROPERTY_AT_ID,
  AttachDecorator.JSON_PROPERTY_BYTE_COUNT,
  AttachDecorator.JSON_PROPERTY_DATA,
  AttachDecorator.JSON_PROPERTY_DESCRIPTION,
  AttachDecorator.JSON_PROPERTY_FILENAME,
  AttachDecorator.JSON_PROPERTY_LASTMOD_TIME,
  AttachDecorator.JSON_PROPERTY_MIME_TYPE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-28T08:24:27.640452+02:00[Europe/Berlin]")
public class AttachDecorator {
  public static final String JSON_PROPERTY_AT_ID = "@id";
  private String atId;

  public static final String JSON_PROPERTY_BYTE_COUNT = "byte_count";
  private Integer byteCount;

  public static final String JSON_PROPERTY_DATA = "data";
  private AttachDecoratorData data;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_FILENAME = "filename";
  private String filename;

  public static final String JSON_PROPERTY_LASTMOD_TIME = "lastmod_time";
  private String lastmodTime;

  public static final String JSON_PROPERTY_MIME_TYPE = "mime-type";
  private String mimeType;


  public AttachDecorator atId(String atId) {
    this.atId = atId;
    return this;
  }

   /**
   * Attachment identifier
   * @return atId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3fa85f64-5717-4562-b3fc-2c963f66afa6", value = "Attachment identifier")
  @JsonProperty(JSON_PROPERTY_AT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAtId() {
    return atId;
  }


  @JsonProperty(JSON_PROPERTY_AT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAtId(String atId) {
    this.atId = atId;
  }


  public AttachDecorator byteCount(Integer byteCount) {
    this.byteCount = byteCount;
    return this;
  }

   /**
   * Byte count of data included by reference
   * @return byteCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1234", value = "Byte count of data included by reference")
  @JsonProperty(JSON_PROPERTY_BYTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getByteCount() {
    return byteCount;
  }


  @JsonProperty(JSON_PROPERTY_BYTE_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setByteCount(Integer byteCount) {
    this.byteCount = byteCount;
  }


  public AttachDecorator data(AttachDecoratorData data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AttachDecoratorData getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setData(AttachDecoratorData data) {
    this.data = data;
  }


  public AttachDecorator description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Human-readable description of content
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "view from doorway, facing east, with lights off", value = "Human-readable description of content")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public AttachDecorator filename(String filename) {
    this.filename = filename;
    return this;
  }

   /**
   * File name
   * @return filename
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "IMG1092348.png", value = "File name")
  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFilename() {
    return filename;
  }


  @JsonProperty(JSON_PROPERTY_FILENAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilename(String filename) {
    this.filename = filename;
  }


  public AttachDecorator lastmodTime(String lastmodTime) {
    this.lastmodTime = lastmodTime;
    return this;
  }

   /**
   * Hint regarding last modification datetime, in ISO-8601 format
   * @return lastmodTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2021-08-25 08:37:04Z", value = "Hint regarding last modification datetime, in ISO-8601 format")
  @JsonProperty(JSON_PROPERTY_LASTMOD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastmodTime() {
    return lastmodTime;
  }


  @JsonProperty(JSON_PROPERTY_LASTMOD_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastmodTime(String lastmodTime) {
    this.lastmodTime = lastmodTime;
  }


  public AttachDecorator mimeType(String mimeType) {
    this.mimeType = mimeType;
    return this;
  }

   /**
   * MIME type
   * @return mimeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "image/png", value = "MIME type")
  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMimeType() {
    return mimeType;
  }


  @JsonProperty(JSON_PROPERTY_MIME_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMimeType(String mimeType) {
    this.mimeType = mimeType;
  }


  /**
   * Return true if this AttachDecorator object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AttachDecorator attachDecorator = (AttachDecorator) o;
    return Objects.equals(this.atId, attachDecorator.atId) &&
        Objects.equals(this.byteCount, attachDecorator.byteCount) &&
        Objects.equals(this.data, attachDecorator.data) &&
        Objects.equals(this.description, attachDecorator.description) &&
        Objects.equals(this.filename, attachDecorator.filename) &&
        Objects.equals(this.lastmodTime, attachDecorator.lastmodTime) &&
        Objects.equals(this.mimeType, attachDecorator.mimeType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(atId, byteCount, data, description, filename, lastmodTime, mimeType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AttachDecorator {\n");
    sb.append("    atId: ").append(toIndentedString(atId)).append("\n");
    sb.append("    byteCount: ").append(toIndentedString(byteCount)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    lastmodTime: ").append(toIndentedString(lastmodTime)).append("\n");
    sb.append("    mimeType: ").append(toIndentedString(mimeType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

