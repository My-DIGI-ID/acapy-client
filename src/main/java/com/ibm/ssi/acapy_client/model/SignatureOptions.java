/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.ssi.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ibm.ssi.acapy_client.invoker.JSON;


/**
 * SignatureOptions
 */
@JsonPropertyOrder({
  SignatureOptions.JSON_PROPERTY_CHALLENGE,
  SignatureOptions.JSON_PROPERTY_DOMAIN,
  SignatureOptions.JSON_PROPERTY_PROOF_PURPOSE,
  SignatureOptions.JSON_PROPERTY_TYPE,
  SignatureOptions.JSON_PROPERTY_VERIFICATION_METHOD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-11T17:04:23.656276+02:00[Europe/Berlin]")
public class SignatureOptions {
  public static final String JSON_PROPERTY_CHALLENGE = "challenge";
  private String challenge;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private String domain;

  public static final String JSON_PROPERTY_PROOF_PURPOSE = "proofPurpose";
  private String proofPurpose;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_VERIFICATION_METHOD = "verificationMethod";
  private String verificationMethod;


  public SignatureOptions challenge(String challenge) {
    this.challenge = challenge;
    return this;
  }

   /**
   * Get challenge
   * @return challenge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHALLENGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getChallenge() {
    return challenge;
  }


  @JsonProperty(JSON_PROPERTY_CHALLENGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChallenge(String challenge) {
    this.challenge = challenge;
  }


  public SignatureOptions domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Get domain
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(String domain) {
    this.domain = domain;
  }


  public SignatureOptions proofPurpose(String proofPurpose) {
    this.proofPurpose = proofPurpose;
    return this;
  }

   /**
   * Get proofPurpose
   * @return proofPurpose
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PROOF_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProofPurpose() {
    return proofPurpose;
  }


  @JsonProperty(JSON_PROPERTY_PROOF_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProofPurpose(String proofPurpose) {
    this.proofPurpose = proofPurpose;
  }


  public SignatureOptions type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(String type) {
    this.type = type;
  }


  public SignatureOptions verificationMethod(String verificationMethod) {
    this.verificationMethod = verificationMethod;
    return this;
  }

   /**
   * Get verificationMethod
   * @return verificationMethod
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VERIFICATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getVerificationMethod() {
    return verificationMethod;
  }


  @JsonProperty(JSON_PROPERTY_VERIFICATION_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVerificationMethod(String verificationMethod) {
    this.verificationMethod = verificationMethod;
  }


  /**
   * Return true if this SignatureOptions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignatureOptions signatureOptions = (SignatureOptions) o;
    return Objects.equals(this.challenge, signatureOptions.challenge) &&
        Objects.equals(this.domain, signatureOptions.domain) &&
        Objects.equals(this.proofPurpose, signatureOptions.proofPurpose) &&
        Objects.equals(this.type, signatureOptions.type) &&
        Objects.equals(this.verificationMethod, signatureOptions.verificationMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(challenge, domain, proofPurpose, type, verificationMethod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignatureOptions {\n");
    sb.append("    challenge: ").append(toIndentedString(challenge)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    proofPurpose: ").append(toIndentedString(proofPurpose)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    verificationMethod: ").append(toIndentedString(verificationMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

