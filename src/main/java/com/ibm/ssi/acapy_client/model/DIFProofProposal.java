/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.ssi.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ibm.ssi.acapy_client.model.InputDescriptors;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ibm.ssi.acapy_client.invoker.JSON;


/**
 * DIFProofProposal
 */
@JsonPropertyOrder({
  DIFProofProposal.JSON_PROPERTY_INPUT_DESCRIPTORS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-11T17:04:23.656276+02:00[Europe/Berlin]")
public class DIFProofProposal {
  public static final String JSON_PROPERTY_INPUT_DESCRIPTORS = "input_descriptors";
  private List<InputDescriptors> inputDescriptors = null;


  public DIFProofProposal inputDescriptors(List<InputDescriptors> inputDescriptors) {
    this.inputDescriptors = inputDescriptors;
    return this;
  }

  public DIFProofProposal addInputDescriptorsItem(InputDescriptors inputDescriptorsItem) {
    if (this.inputDescriptors == null) {
      this.inputDescriptors = new ArrayList<>();
    }
    this.inputDescriptors.add(inputDescriptorsItem);
    return this;
  }

   /**
   * Get inputDescriptors
   * @return inputDescriptors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INPUT_DESCRIPTORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<InputDescriptors> getInputDescriptors() {
    return inputDescriptors;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_DESCRIPTORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputDescriptors(List<InputDescriptors> inputDescriptors) {
    this.inputDescriptors = inputDescriptors;
  }


  /**
   * Return true if this DIFProofProposal object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DIFProofProposal diFProofProposal = (DIFProofProposal) o;
    return Objects.equals(this.inputDescriptors, diFProofProposal.inputDescriptors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(inputDescriptors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DIFProofProposal {\n");
    sb.append("    inputDescriptors: ").append(toIndentedString(inputDescriptors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

