/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.ssi.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ibm.ssi.acapy_client.invoker.JSON;


/**
 * IndyNonRevocProof
 */
@JsonPropertyOrder({
  IndyNonRevocProof.JSON_PROPERTY_C_LIST,
  IndyNonRevocProof.JSON_PROPERTY_X_LIST
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-28T08:24:27.640452+02:00[Europe/Berlin]")
public class IndyNonRevocProof {
  public static final String JSON_PROPERTY_C_LIST = "c_list";
  private Map<String, String> cList = null;

  public static final String JSON_PROPERTY_X_LIST = "x_list";
  private Map<String, String> xList = null;


  public IndyNonRevocProof cList(Map<String, String> cList) {
    this.cList = cList;
    return this;
  }

  public IndyNonRevocProof putCListItem(String key, String cListItem) {
    if (this.cList == null) {
      this.cList = new HashMap<>();
    }
    this.cList.put(key, cListItem);
    return this;
  }

   /**
   * Get cList
   * @return cList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_C_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getcList() {
    return cList;
  }


  @JsonProperty(JSON_PROPERTY_C_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setcList(Map<String, String> cList) {
    this.cList = cList;
  }


  public IndyNonRevocProof xList(Map<String, String> xList) {
    this.xList = xList;
    return this;
  }

  public IndyNonRevocProof putXListItem(String key, String xListItem) {
    if (this.xList == null) {
      this.xList = new HashMap<>();
    }
    this.xList.put(key, xListItem);
    return this;
  }

   /**
   * Get xList
   * @return xList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_X_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getxList() {
    return xList;
  }


  @JsonProperty(JSON_PROPERTY_X_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setxList(Map<String, String> xList) {
    this.xList = xList;
  }


  /**
   * Return true if this IndyNonRevocProof object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndyNonRevocProof indyNonRevocProof = (IndyNonRevocProof) o;
    return Objects.equals(this.cList, indyNonRevocProof.cList) &&
        Objects.equals(this.xList, indyNonRevocProof.xList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cList, xList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndyNonRevocProof {\n");
    sb.append("    cList: ").append(toIndentedString(cList)).append("\n");
    sb.append("    xList: ").append(toIndentedString(xList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

