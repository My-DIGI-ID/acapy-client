/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.ssi.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ibm.ssi.acapy_client.model.DIFField;
import com.ibm.ssi.acapy_client.model.DIFHolder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.ibm.ssi.acapy_client.invoker.JSON;


/**
 * Constraints
 */
@JsonPropertyOrder({
  Constraints.JSON_PROPERTY_FIELDS,
  Constraints.JSON_PROPERTY_IS_HOLDER,
  Constraints.JSON_PROPERTY_LIMIT_DISCLOSURE,
  Constraints.JSON_PROPERTY_STATUS_ACTIVE,
  Constraints.JSON_PROPERTY_STATUS_REVOKED,
  Constraints.JSON_PROPERTY_STATUS_SUSPENDED,
  Constraints.JSON_PROPERTY_SUBJECT_IS_ISSUER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-11T17:04:23.656276+02:00[Europe/Berlin]")
public class Constraints {
  public static final String JSON_PROPERTY_FIELDS = "fields";
  private List<DIFField> fields = null;

  public static final String JSON_PROPERTY_IS_HOLDER = "is_holder";
  private List<DIFHolder> isHolder = null;

  public static final String JSON_PROPERTY_LIMIT_DISCLOSURE = "limit_disclosure";
  private String limitDisclosure;

  /**
   * Gets or Sets statusActive
   */
  public enum StatusActiveEnum {
    REQUIRED("required"),
    
    ALLOWED("allowed"),
    
    DISALLOWED("disallowed");

    private String value;

    StatusActiveEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusActiveEnum fromValue(String value) {
      for (StatusActiveEnum b : StatusActiveEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS_ACTIVE = "status_active";
  private StatusActiveEnum statusActive;

  /**
   * Gets or Sets statusRevoked
   */
  public enum StatusRevokedEnum {
    REQUIRED("required"),
    
    ALLOWED("allowed"),
    
    DISALLOWED("disallowed");

    private String value;

    StatusRevokedEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusRevokedEnum fromValue(String value) {
      for (StatusRevokedEnum b : StatusRevokedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS_REVOKED = "status_revoked";
  private StatusRevokedEnum statusRevoked;

  /**
   * Gets or Sets statusSuspended
   */
  public enum StatusSuspendedEnum {
    REQUIRED("required"),
    
    ALLOWED("allowed"),
    
    DISALLOWED("disallowed");

    private String value;

    StatusSuspendedEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusSuspendedEnum fromValue(String value) {
      for (StatusSuspendedEnum b : StatusSuspendedEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS_SUSPENDED = "status_suspended";
  private StatusSuspendedEnum statusSuspended;

  /**
   * SubjectIsIssuer
   */
  public enum SubjectIsIssuerEnum {
    REQUIRED("required"),
    
    PREFERRED("preferred");

    private String value;

    SubjectIsIssuerEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SubjectIsIssuerEnum fromValue(String value) {
      for (SubjectIsIssuerEnum b : SubjectIsIssuerEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SUBJECT_IS_ISSUER = "subject_is_issuer";
  private SubjectIsIssuerEnum subjectIsIssuer;


  public Constraints fields(List<DIFField> fields) {
    this.fields = fields;
    return this;
  }

  public Constraints addFieldsItem(DIFField fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Get fields
   * @return fields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DIFField> getFields() {
    return fields;
  }


  @JsonProperty(JSON_PROPERTY_FIELDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFields(List<DIFField> fields) {
    this.fields = fields;
  }


  public Constraints isHolder(List<DIFHolder> isHolder) {
    this.isHolder = isHolder;
    return this;
  }

  public Constraints addIsHolderItem(DIFHolder isHolderItem) {
    if (this.isHolder == null) {
      this.isHolder = new ArrayList<>();
    }
    this.isHolder.add(isHolderItem);
    return this;
  }

   /**
   * Get isHolder
   * @return isHolder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_HOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DIFHolder> getIsHolder() {
    return isHolder;
  }


  @JsonProperty(JSON_PROPERTY_IS_HOLDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsHolder(List<DIFHolder> isHolder) {
    this.isHolder = isHolder;
  }


  public Constraints limitDisclosure(String limitDisclosure) {
    this.limitDisclosure = limitDisclosure;
    return this;
  }

   /**
   * LimitDisclosure
   * @return limitDisclosure
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "LimitDisclosure")
  @JsonProperty(JSON_PROPERTY_LIMIT_DISCLOSURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLimitDisclosure() {
    return limitDisclosure;
  }


  @JsonProperty(JSON_PROPERTY_LIMIT_DISCLOSURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLimitDisclosure(String limitDisclosure) {
    this.limitDisclosure = limitDisclosure;
  }


  public Constraints statusActive(StatusActiveEnum statusActive) {
    this.statusActive = statusActive;
    return this;
  }

   /**
   * Get statusActive
   * @return statusActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusActiveEnum getStatusActive() {
    return statusActive;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusActive(StatusActiveEnum statusActive) {
    this.statusActive = statusActive;
  }


  public Constraints statusRevoked(StatusRevokedEnum statusRevoked) {
    this.statusRevoked = statusRevoked;
    return this;
  }

   /**
   * Get statusRevoked
   * @return statusRevoked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS_REVOKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusRevokedEnum getStatusRevoked() {
    return statusRevoked;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_REVOKED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusRevoked(StatusRevokedEnum statusRevoked) {
    this.statusRevoked = statusRevoked;
  }


  public Constraints statusSuspended(StatusSuspendedEnum statusSuspended) {
    this.statusSuspended = statusSuspended;
    return this;
  }

   /**
   * Get statusSuspended
   * @return statusSuspended
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATUS_SUSPENDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusSuspendedEnum getStatusSuspended() {
    return statusSuspended;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_SUSPENDED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatusSuspended(StatusSuspendedEnum statusSuspended) {
    this.statusSuspended = statusSuspended;
  }


  public Constraints subjectIsIssuer(SubjectIsIssuerEnum subjectIsIssuer) {
    this.subjectIsIssuer = subjectIsIssuer;
    return this;
  }

   /**
   * SubjectIsIssuer
   * @return subjectIsIssuer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "SubjectIsIssuer")
  @JsonProperty(JSON_PROPERTY_SUBJECT_IS_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SubjectIsIssuerEnum getSubjectIsIssuer() {
    return subjectIsIssuer;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT_IS_ISSUER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubjectIsIssuer(SubjectIsIssuerEnum subjectIsIssuer) {
    this.subjectIsIssuer = subjectIsIssuer;
  }


  /**
   * Return true if this Constraints object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Constraints constraints = (Constraints) o;
    return Objects.equals(this.fields, constraints.fields) &&
        Objects.equals(this.isHolder, constraints.isHolder) &&
        Objects.equals(this.limitDisclosure, constraints.limitDisclosure) &&
        Objects.equals(this.statusActive, constraints.statusActive) &&
        Objects.equals(this.statusRevoked, constraints.statusRevoked) &&
        Objects.equals(this.statusSuspended, constraints.statusSuspended) &&
        Objects.equals(this.subjectIsIssuer, constraints.subjectIsIssuer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fields, isHolder, limitDisclosure, statusActive, statusRevoked, statusSuspended, subjectIsIssuer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Constraints {\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    isHolder: ").append(toIndentedString(isHolder)).append("\n");
    sb.append("    limitDisclosure: ").append(toIndentedString(limitDisclosure)).append("\n");
    sb.append("    statusActive: ").append(toIndentedString(statusActive)).append("\n");
    sb.append("    statusRevoked: ").append(toIndentedString(statusRevoked)).append("\n");
    sb.append("    statusSuspended: ").append(toIndentedString(statusSuspended)).append("\n");
    sb.append("    subjectIsIssuer: ").append(toIndentedString(subjectIsIssuer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

