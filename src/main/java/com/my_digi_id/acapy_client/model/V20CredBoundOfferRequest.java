/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.my_digi_id.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.my_digi_id.acapy_client.model.V20CredFilter;
import com.my_digi_id.acapy_client.model.V20CredPreview;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.my_digi_id.acapy_client.invoker.JSON;


/**
 * V20CredBoundOfferRequest
 */
@JsonPropertyOrder({
  V20CredBoundOfferRequest.JSON_PROPERTY_COUNTER_PREVIEW,
  V20CredBoundOfferRequest.JSON_PROPERTY_FILTER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-08T11:11:35.214106+01:00[Europe/Berlin]")
public class V20CredBoundOfferRequest {
  public static final String JSON_PROPERTY_COUNTER_PREVIEW = "counter_preview";
  private V20CredPreview counterPreview;

  public static final String JSON_PROPERTY_FILTER = "filter";
  private V20CredFilter filter;


  public V20CredBoundOfferRequest counterPreview(V20CredPreview counterPreview) {
    this.counterPreview = counterPreview;
    return this;
  }

   /**
   * Optional content for counter-proposal
   * @return counterPreview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional content for counter-proposal")
  @JsonProperty(JSON_PROPERTY_COUNTER_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V20CredPreview getCounterPreview() {
    return counterPreview;
  }


  @JsonProperty(JSON_PROPERTY_COUNTER_PREVIEW)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCounterPreview(V20CredPreview counterPreview) {
    this.counterPreview = counterPreview;
  }


  public V20CredBoundOfferRequest filter(V20CredFilter filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Credential specification criteria by format
   * @return filter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Credential specification criteria by format")
  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V20CredFilter getFilter() {
    return filter;
  }


  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilter(V20CredFilter filter) {
    this.filter = filter;
  }


  /**
   * Return true if this V20CredBoundOfferRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V20CredBoundOfferRequest v20CredBoundOfferRequest = (V20CredBoundOfferRequest) o;
    return Objects.equals(this.counterPreview, v20CredBoundOfferRequest.counterPreview) &&
        Objects.equals(this.filter, v20CredBoundOfferRequest.filter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(counterPreview, filter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V20CredBoundOfferRequest {\n");
    sb.append("    counterPreview: ").append(toIndentedString(counterPreview)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

