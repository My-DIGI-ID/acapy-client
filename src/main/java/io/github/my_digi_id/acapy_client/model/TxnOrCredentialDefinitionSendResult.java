/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.my_digi_id.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.my_digi_id.acapy_client.model.CredentialDefinitionSendResult;
import io.github.my_digi_id.acapy_client.model.TransactionRecord;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.github.my_digi_id.acapy_client.invoker.JSON;


/**
 * TxnOrCredentialDefinitionSendResult
 */
@JsonPropertyOrder({
  TxnOrCredentialDefinitionSendResult.JSON_PROPERTY_SENT,
  TxnOrCredentialDefinitionSendResult.JSON_PROPERTY_TXN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-12T14:46:41.984298+01:00[Europe/Berlin]")
public class TxnOrCredentialDefinitionSendResult {
  public static final String JSON_PROPERTY_SENT = "sent";
  private CredentialDefinitionSendResult sent;

  public static final String JSON_PROPERTY_TXN = "txn";
  private TransactionRecord txn;


  public TxnOrCredentialDefinitionSendResult sent(CredentialDefinitionSendResult sent) {
    this.sent = sent;
    return this;
  }

   /**
   * Get sent
   * @return sent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CredentialDefinitionSendResult getSent() {
    return sent;
  }


  @JsonProperty(JSON_PROPERTY_SENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSent(CredentialDefinitionSendResult sent) {
    this.sent = sent;
  }


  public TxnOrCredentialDefinitionSendResult txn(TransactionRecord txn) {
    this.txn = txn;
    return this;
  }

   /**
   * Credential definition transaction to endorse
   * @return txn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Credential definition transaction to endorse")
  @JsonProperty(JSON_PROPERTY_TXN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TransactionRecord getTxn() {
    return txn;
  }


  @JsonProperty(JSON_PROPERTY_TXN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTxn(TransactionRecord txn) {
    this.txn = txn;
  }


  /**
   * Return true if this TxnOrCredentialDefinitionSendResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TxnOrCredentialDefinitionSendResult txnOrCredentialDefinitionSendResult = (TxnOrCredentialDefinitionSendResult) o;
    return Objects.equals(this.sent, txnOrCredentialDefinitionSendResult.sent) &&
        Objects.equals(this.txn, txnOrCredentialDefinitionSendResult.txn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sent, txn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TxnOrCredentialDefinitionSendResult {\n");
    sb.append("    sent: ").append(toIndentedString(sent)).append("\n");
    sb.append("    txn: ").append(toIndentedString(txn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

