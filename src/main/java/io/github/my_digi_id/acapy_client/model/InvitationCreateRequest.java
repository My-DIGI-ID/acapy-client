/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.my_digi_id.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.my_digi_id.acapy_client.model.AttachmentDef;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.github.my_digi_id.acapy_client.invoker.JSON;


/**
 * InvitationCreateRequest
 */
@JsonPropertyOrder({
  InvitationCreateRequest.JSON_PROPERTY_ALIAS,
  InvitationCreateRequest.JSON_PROPERTY_ATTACHMENTS,
  InvitationCreateRequest.JSON_PROPERTY_HANDSHAKE_PROTOCOLS,
  InvitationCreateRequest.JSON_PROPERTY_MEDIATION_ID,
  InvitationCreateRequest.JSON_PROPERTY_METADATA,
  InvitationCreateRequest.JSON_PROPERTY_MY_LABEL,
  InvitationCreateRequest.JSON_PROPERTY_USE_PUBLIC_DID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-12T14:46:41.984298+01:00[Europe/Berlin]")
public class InvitationCreateRequest {
  public static final String JSON_PROPERTY_ALIAS = "alias";
  private String alias;

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private List<AttachmentDef> attachments = null;

  public static final String JSON_PROPERTY_HANDSHAKE_PROTOCOLS = "handshake_protocols";
  private List<String> handshakeProtocols = null;

  public static final String JSON_PROPERTY_MEDIATION_ID = "mediation_id";
  private String mediationId;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private Object metadata;

  public static final String JSON_PROPERTY_MY_LABEL = "my_label";
  private String myLabel;

  public static final String JSON_PROPERTY_USE_PUBLIC_DID = "use_public_did";
  private Boolean usePublicDid;


  public InvitationCreateRequest alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Alias for connection
   * @return alias
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Barry", value = "Alias for connection")
  @JsonProperty(JSON_PROPERTY_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAlias() {
    return alias;
  }


  @JsonProperty(JSON_PROPERTY_ALIAS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAlias(String alias) {
    this.alias = alias;
  }


  public InvitationCreateRequest attachments(List<AttachmentDef> attachments) {
    this.attachments = attachments;
    return this;
  }

  public InvitationCreateRequest addAttachmentsItem(AttachmentDef attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Optional invitation attachments
   * @return attachments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional invitation attachments")
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<AttachmentDef> getAttachments() {
    return attachments;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachments(List<AttachmentDef> attachments) {
    this.attachments = attachments;
  }


  public InvitationCreateRequest handshakeProtocols(List<String> handshakeProtocols) {
    this.handshakeProtocols = handshakeProtocols;
    return this;
  }

  public InvitationCreateRequest addHandshakeProtocolsItem(String handshakeProtocolsItem) {
    if (this.handshakeProtocols == null) {
      this.handshakeProtocols = new ArrayList<>();
    }
    this.handshakeProtocols.add(handshakeProtocolsItem);
    return this;
  }

   /**
   * Get handshakeProtocols
   * @return handshakeProtocols
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HANDSHAKE_PROTOCOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getHandshakeProtocols() {
    return handshakeProtocols;
  }


  @JsonProperty(JSON_PROPERTY_HANDSHAKE_PROTOCOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHandshakeProtocols(List<String> handshakeProtocols) {
    this.handshakeProtocols = handshakeProtocols;
  }


  public InvitationCreateRequest mediationId(String mediationId) {
    this.mediationId = mediationId;
    return this;
  }

   /**
   * Identifier for active mediation record to be used
   * @return mediationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3fa85f64-5717-4562-b3fc-2c963f66afa6", value = "Identifier for active mediation record to be used")
  @JsonProperty(JSON_PROPERTY_MEDIATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMediationId() {
    return mediationId;
  }


  @JsonProperty(JSON_PROPERTY_MEDIATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediationId(String mediationId) {
    this.mediationId = mediationId;
  }


  public InvitationCreateRequest metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Optional metadata to attach to the connection created with the invitation
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional metadata to attach to the connection created with the invitation")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public InvitationCreateRequest myLabel(String myLabel) {
    this.myLabel = myLabel;
    return this;
  }

   /**
   * Label for connection invitation
   * @return myLabel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Invitation to Barry", value = "Label for connection invitation")
  @JsonProperty(JSON_PROPERTY_MY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMyLabel() {
    return myLabel;
  }


  @JsonProperty(JSON_PROPERTY_MY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMyLabel(String myLabel) {
    this.myLabel = myLabel;
  }


  public InvitationCreateRequest usePublicDid(Boolean usePublicDid) {
    this.usePublicDid = usePublicDid;
    return this;
  }

   /**
   * Whether to use public DID in invitation
   * @return usePublicDid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "Whether to use public DID in invitation")
  @JsonProperty(JSON_PROPERTY_USE_PUBLIC_DID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUsePublicDid() {
    return usePublicDid;
  }


  @JsonProperty(JSON_PROPERTY_USE_PUBLIC_DID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsePublicDid(Boolean usePublicDid) {
    this.usePublicDid = usePublicDid;
  }


  /**
   * Return true if this InvitationCreateRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvitationCreateRequest invitationCreateRequest = (InvitationCreateRequest) o;
    return Objects.equals(this.alias, invitationCreateRequest.alias) &&
        Objects.equals(this.attachments, invitationCreateRequest.attachments) &&
        Objects.equals(this.handshakeProtocols, invitationCreateRequest.handshakeProtocols) &&
        Objects.equals(this.mediationId, invitationCreateRequest.mediationId) &&
        Objects.equals(this.metadata, invitationCreateRequest.metadata) &&
        Objects.equals(this.myLabel, invitationCreateRequest.myLabel) &&
        Objects.equals(this.usePublicDid, invitationCreateRequest.usePublicDid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alias, attachments, handshakeProtocols, mediationId, metadata, myLabel, usePublicDid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvitationCreateRequest {\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    handshakeProtocols: ").append(toIndentedString(handshakeProtocols)).append("\n");
    sb.append("    mediationId: ").append(toIndentedString(mediationId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    myLabel: ").append(toIndentedString(myLabel)).append("\n");
    sb.append("    usePublicDid: ").append(toIndentedString(usePublicDid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

