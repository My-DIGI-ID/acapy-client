/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.my_digi_id.acapy_client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.github.my_digi_id.acapy_client.invoker.JSON;


/**
 * ClaimFormat
 */
@JsonPropertyOrder({
  ClaimFormat.JSON_PROPERTY_JWT,
  ClaimFormat.JSON_PROPERTY_JWT_VC,
  ClaimFormat.JSON_PROPERTY_JWT_VP,
  ClaimFormat.JSON_PROPERTY_LDP,
  ClaimFormat.JSON_PROPERTY_LDP_VC,
  ClaimFormat.JSON_PROPERTY_LDP_VP
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-12T14:46:41.984298+01:00[Europe/Berlin]")
public class ClaimFormat {
  public static final String JSON_PROPERTY_JWT = "jwt";
  private Object jwt;

  public static final String JSON_PROPERTY_JWT_VC = "jwt_vc";
  private Object jwtVc;

  public static final String JSON_PROPERTY_JWT_VP = "jwt_vp";
  private Object jwtVp;

  public static final String JSON_PROPERTY_LDP = "ldp";
  private Object ldp;

  public static final String JSON_PROPERTY_LDP_VC = "ldp_vc";
  private Object ldpVc;

  public static final String JSON_PROPERTY_LDP_VP = "ldp_vp";
  private Object ldpVp;


  public ClaimFormat jwt(Object jwt) {
    this.jwt = jwt;
    return this;
  }

   /**
   * Get jwt
   * @return jwt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_JWT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getJwt() {
    return jwt;
  }


  @JsonProperty(JSON_PROPERTY_JWT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJwt(Object jwt) {
    this.jwt = jwt;
  }


  public ClaimFormat jwtVc(Object jwtVc) {
    this.jwtVc = jwtVc;
    return this;
  }

   /**
   * Get jwtVc
   * @return jwtVc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_JWT_VC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getJwtVc() {
    return jwtVc;
  }


  @JsonProperty(JSON_PROPERTY_JWT_VC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJwtVc(Object jwtVc) {
    this.jwtVc = jwtVc;
  }


  public ClaimFormat jwtVp(Object jwtVp) {
    this.jwtVp = jwtVp;
    return this;
  }

   /**
   * Get jwtVp
   * @return jwtVp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_JWT_VP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getJwtVp() {
    return jwtVp;
  }


  @JsonProperty(JSON_PROPERTY_JWT_VP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setJwtVp(Object jwtVp) {
    this.jwtVp = jwtVp;
  }


  public ClaimFormat ldp(Object ldp) {
    this.ldp = ldp;
    return this;
  }

   /**
   * Get ldp
   * @return ldp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LDP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getLdp() {
    return ldp;
  }


  @JsonProperty(JSON_PROPERTY_LDP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLdp(Object ldp) {
    this.ldp = ldp;
  }


  public ClaimFormat ldpVc(Object ldpVc) {
    this.ldpVc = ldpVc;
    return this;
  }

   /**
   * Get ldpVc
   * @return ldpVc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LDP_VC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getLdpVc() {
    return ldpVc;
  }


  @JsonProperty(JSON_PROPERTY_LDP_VC)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLdpVc(Object ldpVc) {
    this.ldpVc = ldpVc;
  }


  public ClaimFormat ldpVp(Object ldpVp) {
    this.ldpVp = ldpVp;
    return this;
  }

   /**
   * Get ldpVp
   * @return ldpVp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LDP_VP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getLdpVp() {
    return ldpVp;
  }


  @JsonProperty(JSON_PROPERTY_LDP_VP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLdpVp(Object ldpVp) {
    this.ldpVp = ldpVp;
  }


  /**
   * Return true if this ClaimFormat object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClaimFormat claimFormat = (ClaimFormat) o;
    return Objects.equals(this.jwt, claimFormat.jwt) &&
        Objects.equals(this.jwtVc, claimFormat.jwtVc) &&
        Objects.equals(this.jwtVp, claimFormat.jwtVp) &&
        Objects.equals(this.ldp, claimFormat.ldp) &&
        Objects.equals(this.ldpVc, claimFormat.ldpVc) &&
        Objects.equals(this.ldpVp, claimFormat.ldpVp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jwt, jwtVc, jwtVp, ldp, ldpVc, ldpVp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClaimFormat {\n");
    sb.append("    jwt: ").append(toIndentedString(jwt)).append("\n");
    sb.append("    jwtVc: ").append(toIndentedString(jwtVc)).append("\n");
    sb.append("    jwtVp: ").append(toIndentedString(jwtVp)).append("\n");
    sb.append("    ldp: ").append(toIndentedString(ldp)).append("\n");
    sb.append("    ldpVc: ").append(toIndentedString(ldpVc)).append("\n");
    sb.append("    ldpVp: ").append(toIndentedString(ldpVp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

