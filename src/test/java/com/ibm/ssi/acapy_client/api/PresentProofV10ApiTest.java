/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.ssi.acapy_client.api;

import com.ibm.ssi.acapy_client.invoker.*;
import com.ibm.ssi.acapy_client.invoker.auth.*;
import com.ibm.ssi.acapy_client.model.AdminAPIMessageTracing;
import com.ibm.ssi.acapy_client.model.IndyCredPrecis;
import com.ibm.ssi.acapy_client.model.IndyPresSpec;
import java.util.UUID;
import com.ibm.ssi.acapy_client.model.V10PresentationCreateRequestRequest;
import com.ibm.ssi.acapy_client.model.V10PresentationExchange;
import com.ibm.ssi.acapy_client.model.V10PresentationExchangeList;
import com.ibm.ssi.acapy_client.model.V10PresentationProblemReportRequest;
import com.ibm.ssi.acapy_client.model.V10PresentationProposalRequest;
import com.ibm.ssi.acapy_client.model.V10PresentationSendRequestRequest;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PresentProofV10Api
 */
public class PresentProofV10ApiTest {

    private final PresentProofV10Api api = new PresentProofV10Api();

    /**
     * Creates a presentation request not bound to any proposal or connection
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofCreateRequestPostTest() throws ApiException {
        //V10PresentationCreateRequestRequest body = null;
        //V10PresentationExchange response = api.presentProofCreateRequestPost(body);
        // TODO: test validations
    }

    /**
     * Fetch all present-proof exchange records
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofRecordsGetTest() throws ApiException {
        //UUID connectionId = null;
        //String role = null;
        //String state = null;
        //UUID threadId = null;
        //V10PresentationExchangeList response = api.presentProofRecordsGet(connectionId, role, state, threadId);
        // TODO: test validations
    }

    /**
     * Fetch credentials for a presentation request from wallet
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofRecordsPresExIdCredentialsGetTest() throws ApiException {
        //String presExId = null;
        //String count = null;
        //String extraQuery = null;
        //String referent = null;
        //String start = null;
        //List<IndyCredPrecis> response = api.presentProofRecordsPresExIdCredentialsGet(presExId, count, extraQuery, referent, start);
        // TODO: test validations
    }

    /**
     * Remove an existing presentation exchange record
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofRecordsPresExIdDeleteTest() throws ApiException {
        //String presExId = null;
        //Object response = api.presentProofRecordsPresExIdDelete(presExId);
        // TODO: test validations
    }

    /**
     * Fetch a single presentation exchange record
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofRecordsPresExIdGetTest() throws ApiException {
        //String presExId = null;
        //V10PresentationExchange response = api.presentProofRecordsPresExIdGet(presExId);
        // TODO: test validations
    }

    /**
     * Send a problem report for presentation exchange
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofRecordsPresExIdProblemReportPostTest() throws ApiException {
        //String presExId = null;
        //V10PresentationProblemReportRequest body = null;
        //Object response = api.presentProofRecordsPresExIdProblemReportPost(presExId, body);
        // TODO: test validations
    }

    /**
     * Sends a proof presentation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofRecordsPresExIdSendPresentationPostTest() throws ApiException {
        //String presExId = null;
        //IndyPresSpec body = null;
        //V10PresentationExchange response = api.presentProofRecordsPresExIdSendPresentationPost(presExId, body);
        // TODO: test validations
    }

    /**
     * Sends a presentation request in reference to a proposal
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofRecordsPresExIdSendRequestPostTest() throws ApiException {
        //String presExId = null;
        //AdminAPIMessageTracing body = null;
        //V10PresentationExchange response = api.presentProofRecordsPresExIdSendRequestPost(presExId, body);
        // TODO: test validations
    }

    /**
     * Verify a received presentation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofRecordsPresExIdVerifyPresentationPostTest() throws ApiException {
        //String presExId = null;
        //V10PresentationExchange response = api.presentProofRecordsPresExIdVerifyPresentationPost(presExId);
        // TODO: test validations
    }

    /**
     * Sends a presentation proposal
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofSendProposalPostTest() throws ApiException {
        //V10PresentationProposalRequest body = null;
        //V10PresentationExchange response = api.presentProofSendProposalPost(body);
        // TODO: test validations
    }

    /**
     * Sends a free presentation request not bound to any proposal
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void presentProofSendRequestPostTest() throws ApiException {
        //V10PresentationSendRequestRequest body = null;
        //V10PresentationExchange response = api.presentProofSendRequestPost(body);
        // TODO: test validations
    }

}
