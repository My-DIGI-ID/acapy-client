/*
 * IBM-Deutschland
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ibm.ssi.acapy_client.api;

import com.ibm.ssi.acapy_client.invoker.*;
import com.ibm.ssi.acapy_client.invoker.auth.*;
import com.ibm.ssi.acapy_client.model.AttributeMimeTypesResult;
import com.ibm.ssi.acapy_client.model.CredInfoList;
import com.ibm.ssi.acapy_client.model.CredRevokedResult;
import com.ibm.ssi.acapy_client.model.IndyCredInfo;
import com.ibm.ssi.acapy_client.model.VCRecord;
import com.ibm.ssi.acapy_client.model.VCRecordList;
import com.ibm.ssi.acapy_client.model.W3CCredentialsListRequest;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CredentialsApi
 */
public class CredentialsApiTest {

    private final CredentialsApi api = new CredentialsApi();

    /**
     * Remove credential from wallet by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void credentialCredentialIdDeleteTest() throws ApiException {
        //String credentialId = null;
        //Object response = api.credentialCredentialIdDelete(credentialId);
        // TODO: test validations
    }

    /**
     * Fetch credential from wallet by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void credentialCredentialIdGetTest() throws ApiException {
        //String credentialId = null;
        //IndyCredInfo response = api.credentialCredentialIdGet(credentialId);
        // TODO: test validations
    }

    /**
     * Get attribute MIME types from wallet
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void credentialMimeTypesCredentialIdGetTest() throws ApiException {
        //String credentialId = null;
        //AttributeMimeTypesResult response = api.credentialMimeTypesCredentialIdGet(credentialId);
        // TODO: test validations
    }

    /**
     * Query credential revocation status by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void credentialRevokedCredentialIdGetTest() throws ApiException {
        //String credentialId = null;
        //String from = null;
        //String to = null;
        //CredRevokedResult response = api.credentialRevokedCredentialIdGet(credentialId, from, to);
        // TODO: test validations
    }

    /**
     * Remove W3C credential from wallet by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void credentialW3cCredentialIdDeleteTest() throws ApiException {
        //String credentialId = null;
        //Object response = api.credentialW3cCredentialIdDelete(credentialId);
        // TODO: test validations
    }

    /**
     * Fetch W3C credential from wallet by id
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void credentialW3cCredentialIdGetTest() throws ApiException {
        //String credentialId = null;
        //VCRecord response = api.credentialW3cCredentialIdGet(credentialId);
        // TODO: test validations
    }

    /**
     * Fetch credentials from wallet
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void credentialsGetTest() throws ApiException {
        //String count = null;
        //String start = null;
        //String wql = null;
        //CredInfoList response = api.credentialsGet(count, start, wql);
        // TODO: test validations
    }

    /**
     * Fetch W3C credentials from wallet
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void credentialsW3cPostTest() throws ApiException {
        //String count = null;
        //String start = null;
        //String wql = null;
        //W3CCredentialsListRequest body = null;
        //VCRecordList response = api.credentialsW3cPost(count, start, wql, body);
        // TODO: test validations
    }

}
